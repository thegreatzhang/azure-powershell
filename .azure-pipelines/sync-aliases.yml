# Variable 'ADOToken' and 'BotAccessToken' was defined in the Variables tab
schedules:
- cron: "50 15 * * *"
  displayName: 11:50 PM (UTC + 8:00) China Daily Run
  branches:
    include:
    - main

jobs:
- job: UpdateJson
  displayName: Update fabricbot.json
  steps:

  - task: AzureKeyVault@2
  inputs:
    azureSubscription: 'Azure SDK Infrastructure(6b085460-5f21-477e-ba44-1035046e9101)'
    KeyVaultName: 'azurepsdev'
    SecretsFilter: 'azpsbot-ado-wiki-pat'
    RunAsPreJob: true
  - pwsh: |
      echo "Secret Found! $(azpsbot-ado-wiki-pat)"
      ./tools/Github/ParseWiki2Json.ps1 -ADOToken $(azpsbot-ado-wiki-pat)
    displayName: Update fabricbot.json file locally
      
  # - pwsh: |
  #     $gitStatus = git status -s
  #     if (-not $gitStatus) {
  #         Write-Host "The wiki has no changes ."
  #         Write-Host "##vso[task.setvariable variable=ChangesDetected]false"
  #     } else {
  #         Write-Host "There are changes in the repository."
  #         Write-Host "##vso[task.setvariable variable=ChangesDetected]true"
  #     }
  #   displayName: Check if Wiki table has any changes

  - pwsh: |
      git config --global user.email "nicolasshuai@gmail.com"
      git config --global user.name "thegreatzhang"    
      git checkout -b "internal/sync-fabricbot-json"
        
      git add .
      git commit -m "Sync fabricbot.json"
      $bat = Get-AzKeyVaultSecret -VaultName azurepsdev -Name azpsbot-ado-wiki-pat -AsPlainText
      git remote set-url origin https://${bat}@github.com/thegreatzhang/azure-powershell.git;
      git push origin internal/sync-fabricbot-json --force
    displayName: Git commit and push
    # condition: and(succeeded(), eq(variables['ChangesDetected'], 'true'))
  
  - pwsh: |
      $Title = "Sync fabricbot.json According To ADO Wiki Page"
      $HeadBranch = "internal/sync-fabricbot-json"
      $BaseBranch = "main"
      $Description = "This PR sync taskType: scheduledAndTrigger part of fabricbot.json from table of Service-Team-Label-and-Contact-List in ADO wiki page"
      ./tools/Github/CreatePR.ps1 -Title $Title -HeadBranch $HeadBranch -BaseBranch $BaseBranch -BotAccessToken $(BotAccessToken) -Description $Description
    displayName: Create PR to main branch
    # condition: and(succeeded(), eq(variables['ChangesDetected'], 'true'))
