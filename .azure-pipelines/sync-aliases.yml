# Variable 'KeyVaultName' and 'ADOTokenName' was defined in the Variables tab
schedules:
- cron: "50 15 * * *"
  displayName: 11:50 PM (UTC + 8:00) China Daily Run
  branches:
    include:
    - main

jobs:
- job: UpdateJson
  displayName: Update fabricbot.json
  steps:
  # - task: AzureKeyVault@2
  #   inputs:
  #     azureSubscription: 'Azure SDK Infrastructure'
  #     KeyVaultName: '$(KeyVaultName)'
  #     SecretsFilter: '$(ADOTokenName)'
  #     RunAsPreJob: false
  # - pwsh: |
  #     # dir env:
  #     # write-host "name is $(ADOTokenName)"
  #     # write-host $(ADOTokenName)

  #     # write-host "this is ${env:ADOTOKENNAME}"
  #     # write-host $env:ADOTokenName
  #     # write-host "haha"
  #     # Write-Host ${env:ADOTOKENNAME}
  #     # write-host "hehe"
  #     # write-host $(${env:ADOTOKENNAME})
  #     # write-host "hhh"
  #     # write-host $("${env:ADOTOKENNAME}")
  #     # write-host "en"
  #     # write-host $("$(ADOTokenName)")
  #     # write-host $(azpsbot-ado-wiki-pat)
    
  #     ./tools/Github/ParseWiki2Json.ps1 -ADOToken $("$(ADOTokenName)")
  #   displayName: Update fabricbot.json file locally
  - task: AzurePowerShell@5
    inputs:
      azureSubscription: 'Azure SDK Infrastructure'
      ScriptType: 'InlineScript'
      Inline: |
        Write-Host ${env:KEYVAULTNAME}
        Write-Host ${env:ADOTOKENNAME}
        $tokenValue = Get-AzKeyVaultSecret -VaultName ${env:KEYVAULTNAME} -Name ${env:ADOTOKENNAME} -AsPlainText
        Write-Host "##vso[task.setvariable variable=token;issecret=true]$tokenValue"       
      azurePowerShellVersion: 'LatestVersion'
    displayName: 1Update fabricbot.json file locally try
  - pwsh: |
      Write-Host $(token)
      ./tools/Github/ParseWiki2Json.ps1 -ADOToken $(token)
    displayName: Update fabricbot.json file locally try2
  - pwsh: |
      git status
      $gitStatus = git status -s
      if (-not $gitStatus) {
          Echo "The wiki has no changes ."
          Echo "##vso[task.setvariable variable=ChangesDetected]false"
      } else {
          Echo "There are changes in the repository."
          Echo "##vso[task.setvariable variable=ChangesDetected]true"
      }
    displayName: Check if Wiki table has any changes

  - pwsh: |
      git config --global user.email "nicolasshuai@gmail.com"
      git config --global user.name "thegreatzhang"    
      git checkout -b "internal/sync-fabricbot-json"
        
      git add .
      git commit -m "Sync fabricbot.json"
      git remote set-url origin https://$(githubtoken)@github.com/thegreatzhang/azure-powershell.git;
      git push origin internal/sync-fabricbot-json --force
    displayName: Git commit and push
    condition: and(succeeded(), eq(variables['ChangesDetected'], 'true'))
  
  - pwsh: |
      $Title = "Sync fabricbot.json According To ADO Wiki Page"
      $HeadBranch = "internal/sync-fabricbot-json"
      $BaseBranch = "main"
      $Description = "This PR sync taskType: scheduledAndTrigger part of fabricbot.json from table of Service-Team-Label-and-Contact-List in ADO wiki page"
      ./tools/Github/CreatePR.ps1 -Title $Title -HeadBranch $HeadBranch -BaseBranch $BaseBranch -BotAccessToken $(githubtoken) -Description $Description
    displayName: Create PR to main branch
    condition: and(succeeded(), eq(variables['ChangesDetected'], 'true'))
